#!/usr/bin/env python3
"""
RuTracker Magnet Downloader - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
–¢–æ–ª—å–∫–æ –ø–æ–ª—É—á–µ–Ω–∏–µ magnet-—Å—Å—ã–ª–æ–∫ —Å Rutracker
"""

import argparse
import requests
import os
from urllib.parse import urlparse, parse_qs

USER_AGENT = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"

def get_magnet_from_rutracker(topic_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç magnet-—Å—Å—ã–ª–∫—É —Å Rutracker"""
    url = f"https://rutracker.org/forum/viewtopic.php?t={topic_id}"
    try:
        response = requests.get(
            url,
            headers={
                "User-Agent": USER_AGENT,
                "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
            },
            timeout=10
        )
        response.raise_for_status()
        
        # –ò—â–µ–º magnet-—Å—Å—ã–ª–∫—É –≤ –∫–æ–¥–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        for line in response.text.splitlines():
            if "magnet:?" in line and "href=" in line:
                magnet = line.split('href="')[1].split('"')[0]
                return magnet.replace("&amp;", "&")
        
        raise ValueError("Magnet-—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–¥–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ magnet-—Å—Å—ã–ª–∫–∏: {str(e)}")
        return None

def save_file(content: str, file_path: str) -> bool:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç magnet-—Å—Å—ã–ª–∫—É –≤ —Ñ–∞–π–ª"""
    try:
        with open(file_path, 'w') as f:
            f.write(content)
        return True
    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {str(e)}")
        return False

def parse_topic_id(url: str) -> int:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID —Ç–µ–º—ã –∏–∑ URL –∏–ª–∏ —Å—Ç—Ä–æ–∫–∏"""
    try:
        if url.isdigit():
            return int(url)
        
        parsed = urlparse(url)
        if 't=' in parsed.query:
            return int(parse_qs(parsed.query)['t'][0])
        elif '/t' in parsed.path:
            return int(parsed.path.split('/t')[-1].split('.')[0])
        raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–µ–º—ã")
    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL: {str(e)}")
        return None

def main():
    parser = argparse.ArgumentParser(
        description="üì• –ó–∞–≥—Ä—É–∑—á–∏–∫ magnet-—Å—Å—ã–ª–æ–∫ —Å Rutracker",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument(
        "topic",
        help="ID —Ç–µ–º—ã –∏–ª–∏ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: 6673601 –∏–ª–∏ https://rutracker.org/forum/viewtopic.php?t=6673601)"
    )
    parser.add_argument(
        "-o", "--output",
        help="–ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: <ID_—Ç–µ–º—ã>.magnet)",
        default=None
    )
    parser.add_argument(
        "-d", "--directory",
        help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è",
        default=""
    )
    
    args = parser.parse_args()
    topic_id = parse_topic_id(args.topic)
    if not topic_id:
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    output_file = args.output or f"{topic_id}.magnet"
    if args.directory:
        os.makedirs(args.directory, exist_ok=True)
        output_file = os.path.join(args.directory, output_file)

    print(f"üîç –ü–æ–ª—É—á–∞–µ–º magnet-—Å—Å—ã–ª–∫—É –¥–ª—è —Ç–µ–º—ã #{topic_id}...")

    # –ü–æ–ª—É—á–∞–µ–º magnet-—Å—Å—ã–ª–∫—É
    magnet = get_magnet_from_rutracker(topic_id)
    
    if magnet:
        if save_file(magnet, output_file):
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ magnet-—Å—Å—ã–ª–∫–∞: {output_file}")
            print(f"üîó {magnet[:60]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Å—Å—ã–ª–∫–∏
            return
    
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å magnet-—Å—Å—ã–ª–∫—É")
    print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("- –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ")
    print("- –¢–µ–º–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    print("- –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")

if __name__ == "__main__":
    main()
